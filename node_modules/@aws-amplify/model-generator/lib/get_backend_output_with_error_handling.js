import { BackendOutputClientError, BackendOutputClientErrorType, } from '@aws-amplify/deployed-backend-client';
import { AmplifyUserError } from '@aws-amplify/platform-core';
/**
 * Common Error handling for BackendOutputClient.getOutput() in model-generator package.
 */
export const getBackendOutputWithErrorHandling = async (backendOutputClient, backendIdentifier) => {
    try {
        return await backendOutputClient.getOutput(backendIdentifier);
    }
    catch (error) {
        if (error instanceof BackendOutputClientError &&
            error.code === BackendOutputClientErrorType.DEPLOYMENT_IN_PROGRESS) {
            throw new AmplifyUserError('DeploymentInProgressError', {
                message: 'Deployment is currently in progress.',
                resolution: 'Re-run this command once the deployment completes.',
            }, error);
        }
        if (error instanceof BackendOutputClientError &&
            error.code === BackendOutputClientErrorType.NO_STACK_FOUND) {
            throw new AmplifyUserError('StackDoesNotExistError', {
                message: 'Stack does not exist.',
                resolution: 'Ensure the CloudFormation stack ID or Amplify App ID and branch specified are correct and exists, then re-run this command.',
            }, error);
        }
        throw error;
    }
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2V0X2JhY2tlbmRfb3V0cHV0X3dpdGhfZXJyb3JfaGFuZGxpbmcuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvZ2V0X2JhY2tlbmRfb3V0cHV0X3dpdGhfZXJyb3JfaGFuZGxpbmcudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUVMLHdCQUF3QixFQUN4Qiw0QkFBNEIsR0FFN0IsTUFBTSxzQ0FBc0MsQ0FBQztBQUM5QyxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQUU5RDs7R0FFRztBQUNILE1BQU0sQ0FBQyxNQUFNLGlDQUFpQyxHQUFHLEtBQUssRUFDcEQsbUJBQXdDLEVBQ3hDLGlCQUE0QyxFQUM1QyxFQUFFO0lBQ0YsSUFBSTtRQUNGLE9BQU8sTUFBTSxtQkFBbUIsQ0FBQyxTQUFTLENBQUMsaUJBQWlCLENBQUMsQ0FBQztLQUMvRDtJQUFDLE9BQU8sS0FBSyxFQUFFO1FBQ2QsSUFDRSxLQUFLLFlBQVksd0JBQXdCO1lBQ3pDLEtBQUssQ0FBQyxJQUFJLEtBQUssNEJBQTRCLENBQUMsc0JBQXNCLEVBQ2xFO1lBQ0EsTUFBTSxJQUFJLGdCQUFnQixDQUN4QiwyQkFBMkIsRUFDM0I7Z0JBQ0UsT0FBTyxFQUFFLHNDQUFzQztnQkFDL0MsVUFBVSxFQUFFLG9EQUFvRDthQUNqRSxFQUNELEtBQUssQ0FDTixDQUFDO1NBQ0g7UUFDRCxJQUNFLEtBQUssWUFBWSx3QkFBd0I7WUFDekMsS0FBSyxDQUFDLElBQUksS0FBSyw0QkFBNEIsQ0FBQyxjQUFjLEVBQzFEO1lBQ0EsTUFBTSxJQUFJLGdCQUFnQixDQUN4Qix3QkFBd0IsRUFDeEI7Z0JBQ0UsT0FBTyxFQUFFLHVCQUF1QjtnQkFDaEMsVUFBVSxFQUNSLDZIQUE2SDthQUNoSSxFQUNELEtBQUssQ0FDTixDQUFDO1NBQ0g7UUFDRCxNQUFNLEtBQUssQ0FBQztLQUNiO0FBQ0gsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgQmFja2VuZE91dHB1dENsaWVudCxcbiAgQmFja2VuZE91dHB1dENsaWVudEVycm9yLFxuICBCYWNrZW5kT3V0cHV0Q2xpZW50RXJyb3JUeXBlLFxuICBEZXBsb3llZEJhY2tlbmRJZGVudGlmaWVyLFxufSBmcm9tICdAYXdzLWFtcGxpZnkvZGVwbG95ZWQtYmFja2VuZC1jbGllbnQnO1xuaW1wb3J0IHsgQW1wbGlmeVVzZXJFcnJvciB9IGZyb20gJ0Bhd3MtYW1wbGlmeS9wbGF0Zm9ybS1jb3JlJztcblxuLyoqXG4gKiBDb21tb24gRXJyb3IgaGFuZGxpbmcgZm9yIEJhY2tlbmRPdXRwdXRDbGllbnQuZ2V0T3V0cHV0KCkgaW4gbW9kZWwtZ2VuZXJhdG9yIHBhY2thZ2UuXG4gKi9cbmV4cG9ydCBjb25zdCBnZXRCYWNrZW5kT3V0cHV0V2l0aEVycm9ySGFuZGxpbmcgPSBhc3luYyAoXG4gIGJhY2tlbmRPdXRwdXRDbGllbnQ6IEJhY2tlbmRPdXRwdXRDbGllbnQsXG4gIGJhY2tlbmRJZGVudGlmaWVyOiBEZXBsb3llZEJhY2tlbmRJZGVudGlmaWVyXG4pID0+IHtcbiAgdHJ5IHtcbiAgICByZXR1cm4gYXdhaXQgYmFja2VuZE91dHB1dENsaWVudC5nZXRPdXRwdXQoYmFja2VuZElkZW50aWZpZXIpO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGlmIChcbiAgICAgIGVycm9yIGluc3RhbmNlb2YgQmFja2VuZE91dHB1dENsaWVudEVycm9yICYmXG4gICAgICBlcnJvci5jb2RlID09PSBCYWNrZW5kT3V0cHV0Q2xpZW50RXJyb3JUeXBlLkRFUExPWU1FTlRfSU5fUFJPR1JFU1NcbiAgICApIHtcbiAgICAgIHRocm93IG5ldyBBbXBsaWZ5VXNlckVycm9yKFxuICAgICAgICAnRGVwbG95bWVudEluUHJvZ3Jlc3NFcnJvcicsXG4gICAgICAgIHtcbiAgICAgICAgICBtZXNzYWdlOiAnRGVwbG95bWVudCBpcyBjdXJyZW50bHkgaW4gcHJvZ3Jlc3MuJyxcbiAgICAgICAgICByZXNvbHV0aW9uOiAnUmUtcnVuIHRoaXMgY29tbWFuZCBvbmNlIHRoZSBkZXBsb3ltZW50IGNvbXBsZXRlcy4nLFxuICAgICAgICB9LFxuICAgICAgICBlcnJvclxuICAgICAgKTtcbiAgICB9XG4gICAgaWYgKFxuICAgICAgZXJyb3IgaW5zdGFuY2VvZiBCYWNrZW5kT3V0cHV0Q2xpZW50RXJyb3IgJiZcbiAgICAgIGVycm9yLmNvZGUgPT09IEJhY2tlbmRPdXRwdXRDbGllbnRFcnJvclR5cGUuTk9fU1RBQ0tfRk9VTkRcbiAgICApIHtcbiAgICAgIHRocm93IG5ldyBBbXBsaWZ5VXNlckVycm9yKFxuICAgICAgICAnU3RhY2tEb2VzTm90RXhpc3RFcnJvcicsXG4gICAgICAgIHtcbiAgICAgICAgICBtZXNzYWdlOiAnU3RhY2sgZG9lcyBub3QgZXhpc3QuJyxcbiAgICAgICAgICByZXNvbHV0aW9uOlxuICAgICAgICAgICAgJ0Vuc3VyZSB0aGUgQ2xvdWRGb3JtYXRpb24gc3RhY2sgSUQgb3IgQW1wbGlmeSBBcHAgSUQgYW5kIGJyYW5jaCBzcGVjaWZpZWQgYXJlIGNvcnJlY3QgYW5kIGV4aXN0cywgdGhlbiByZS1ydW4gdGhpcyBjb21tYW5kLicsXG4gICAgICAgIH0sXG4gICAgICAgIGVycm9yXG4gICAgICApO1xuICAgIH1cbiAgICB0aHJvdyBlcnJvcjtcbiAgfVxufTtcbiJdfQ==